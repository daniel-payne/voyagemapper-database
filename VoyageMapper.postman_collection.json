{
	"variables": [],
	"info": {
		"name": "VoyageMapper",
		"_postman_id": "0b53f2b6-87a9-7d6a-2310-677922524ada",
		"description": "",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "security/new/sessions",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData      = JSON.parse(responseBody);",
							"",
							"var data = jsonData[0];",
							"",
							"postman.setEnvironmentVariable(\"sessionCode\", data.sessionCode);",
							"",
							"tests['Have A Session Code'] = data.sessionCode !== undefined;"
						]
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							"postman.clearEnvironmentVariable(\"email\");",
							"postman.clearEnvironmentVariable(\"sessionCode\");",
							"",
							"postman.clearEnvironmentVariable(\"currentContextReference\");",
							"",
							"postman.clearEnvironmentVariable(\"searchId\");",
							"postman.clearEnvironmentVariable(\"searchName\");",
							"postman.clearEnvironmentVariable(\"searchContext\");",
							"postman.clearEnvironmentVariable(\"searchLatitude\");",
							"postman.clearEnvironmentVariable(\"searchLongitude\");",
							"",
							"const email = 'user.' + Math.round((Math.random() * 10000),0) + '@test.net';",
							"",
							"postman.setEnvironmentVariable(\"email\", email);",
							"",
							" "
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://localhost:1337/security/new/sessions?email={{email}}@test.net&password=1234",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "1337",
					"path": [
						"security",
						"new",
						"sessions"
					],
					"query": [
						{
							"key": "email",
							"value": "{{email}}@test.net",
							"equals": true,
							"description": ""
						},
						{
							"key": "password",
							"value": "1234",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "geographic/find/contexts 51&0",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData      = JSON.parse(responseBody);",
							"",
							"var data = jsonData[0];",
							"",
							"postman.setEnvironmentVariable(\"currentContextReference\", data.contextReference);",
							"",
							"tests['Context Has Correct Full Name (' + data.fullName         + ')'  ] = data.fullName         === 'East Sussex, England, United Kingdom';",
							"tests['Context Has Correct Reference (' + data.contextReference + ')'  ] = data.contextReference === '239:1:27:';",
							"tests['Context Has Correct TimeZone ('  + data.tzId             + ')'  ] = data.tzId             === 'Europe/London';",
							"",
							""
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://localhost:1337/geographic/find/contexts?latitude=51&longitude=0",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "1337",
					"path": [
						"geographic",
						"find",
						"contexts"
					],
					"query": [
						{
							"key": "latitude",
							"value": "51",
							"equals": true,
							"description": ""
						},
						{
							"key": "longitude",
							"value": "0",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "geographic/match/conurbations Berlin",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData      = JSON.parse(responseBody);",
							"",
							"var data = jsonData[0];",
							"",
							"tests['Context Has Correct ID ('         + data.id                 + ')'  ] = data.id                  === '45388';",
							"tests['Context Has Correct Name ('       + data.fullName           + ')'  ] = data.fullName            === 'Berlin, Germany';",
							"tests['Context Has Correct Reference ('  + data.contextReference   + ')'  ] = data.contextReference    === '86:3:12:45388:';"
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://localhost:1337/geographic/match/conurbations?text=Berlin",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "1337",
					"path": [
						"geographic",
						"match",
						"conurbations"
					],
					"query": [
						{
							"key": "text",
							"value": "Berlin",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "itinerary/add/point Berlin",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData      = JSON.parse(responseBody);",
							"",
							"var data = jsonData[0];",
							"",
							"tests['Context Has Correct Type ('  + data.type    + ')'  ] = data.type     === 'USER-CONURBATION';",
							"tests['Context Has An ID ('         + data.id      + ')'  ] = data.id       !== undefined;",
							" "
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://localhost:1337/itinerary/add/point?session={{sessionCode}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "1337",
					"path": [
						"itinerary",
						"add",
						"point"
					],
					"query": [
						{
							"key": "session",
							"value": "{{sessionCode}}",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"type\":               \"CONURBATION\",\n\t\"Id\":                 45388,\n\t\"fullName\":           \"Berlin, Germany\",\n\t\"contextReference\":   \"86:3:12:45388:\",\n\t\"latitude\":           13.383238060078051,\n\t\"longitude\":          52.50517877595044\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "geographic/match/locations Texas",
			"request": {
				"url": {
					"raw": "http://localhost:1337/geographic/match/locations?text=Texas",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "1337",
					"path": [
						"geographic",
						"match",
						"locations"
					],
					"query": [
						{
							"key": "text",
							"value": "Texas",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "geographic/list/conurbations 240:44:",
			"request": {
				"url": {
					"raw": "http://localhost:1337/geographic/list/conurbations?list=240:44:&take=999",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "1337",
					"path": [
						"geographic",
						"list",
						"conurbations"
					],
					"query": [
						{
							"key": "list",
							"value": "240:44:",
							"equals": true,
							"description": ""
						},
						{
							"key": "take",
							"value": "999",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "itinerary/add/point Houston",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"var jsonData      = JSON.parse(responseBody);",
							"",
							"var data = jsonData[0];",
							"",
							"",
							"tests['Context Has Correct Type ('  + data.type    + ')'  ] = data.type     === 'USER-CONURBATION';",
							"tests['Context Has An ID ('         + data.id      + ')'  ] = data.id       !== undefined;",
							" ",
							" "
						]
					}
				}
			],
			"request": {
				"url": {
					"raw": "http://localhost:1337/itinerary/add/point?session={{sessionCode}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "1337",
					"path": [
						"itinerary",
						"add",
						"point"
					],
					"query": [
						{
							"key": "session",
							"value": "{{sessionCode}}",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"type\": \"CONURBATION\",\n        \"id\": \"46299\",\n        \"fullName\": \"Houston, Texas, United States\",\n        \"contextReference\": \"240:44:2628:46299:\",\n        \"latitude\": \"-95.3374614389474\",\n        \"longitude\": \"29.782027998879634\"\n}"
				},
				"description": ""
			},
			"response": []
		},
		{
			"name": "itinerary/match/points",
			"request": {
				"url": {
					"raw": "http://localhost:1337/itinerary/match/points?session={{sessionCode}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "1337",
					"path": [
						"itinerary",
						"match",
						"points"
					],
					"query": [
						{
							"key": "session",
							"value": "{{sessionCode}}",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "risk/match/incidents 239 36",
			"request": {
				"url": {
					"raw": "http://localhost:1337/risk/match/incidents?countryNo=239&lookBackInMonths=36",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "1337",
					"path": [
						"risk",
						"match",
						"incidents"
					],
					"query": [
						{
							"key": "countryNo",
							"value": "239",
							"equals": true,
							"description": ""
						},
						{
							"key": "lookBackInMonths",
							"value": "36",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "risk/list/incidents ",
			"request": {
				"url": {
					"raw": "http://localhost:1337/risk/list/incidents?list=55702,55717,55731,55739,55756",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "1337",
					"path": [
						"risk",
						"list",
						"incidents"
					],
					"query": [
						{
							"key": "list",
							"value": "55702,55717,55731,55739,55756",
							"equals": true,
							"description": ""
						}
					],
					"variable": []
				},
				"method": "GET",
				"header": [],
				"body": {},
				"description": ""
			},
			"response": []
		}
	]
}